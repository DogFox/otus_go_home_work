services:
  postgres:
    image: postgres:latest
    container_name: postgres-container
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - ../data:/var/lib/postgresql/data
    networks:
      - hw

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672" # http://localhost:15672/#/
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    networks:
      - hw

  calendar:
    build:
      context: .
      dockerfile: ./dockerfile.calendar
    container_name: calendar
    depends_on:
      - postgres
      - rabbitmq
    ports:
      - "8050:8050"
      - "50051:50051"
    networks:
      - hw

  calendar_scheduler:
    build:
      context: .
      dockerfile: ./dockerfile.scheduler
    container_name: calendar_scheduler
    depends_on:
      - rabbitmq
      - calendar
    networks:
      - hw

  calendar_sender:
    build:
      context: .
      dockerfile: ./dockerfile.sender
    container_name: calendar_sender
    depends_on:
      - rabbitmq
      - calendar_scheduler
    networks:
      - hw

  migrations:
    image: migrate/migrate
    container_name: migrations
    volumes:
    - ./migrations:/migrations
    entrypoint: ["/bin/sh", "-c"]
    command: |
      until pg_isready -h postgres -p 5432 -d postgres -U postgres --timeout=30; do
      echo "Waiting for database..."
      sleep 5
      done
      migrate -path=/migrations \
      -database postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable up
    depends_on:
    - postgres
    networks:
    - hw

volumes:
  rabbitmq_data:
  postgres_data:


networks:
  hw:
    driver: bridge
